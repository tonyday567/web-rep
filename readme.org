* web-rep

[[https://hackage.haskell.org/package/numhask-array][file:https://img.shields.io/hackage/v/web-rep.svg]] [[https://github.com/tonyday567/numhask-array/actions?query=workflow%3Ahaskell-ci][file:https://github.com/tonyday567/web-rep/workflows/haskell-ci/badge.svg]]

Various functions and representations for a web page.

The best way to understand functionality is via running the example app:

#+begin_src sh :results output
cabal install
page-example --apptype SharedTest
#+end_src

... and then tune in to:

http://localhost:9160/

* library reference
- [[https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/flags.html#flag-reference][scotty]]
- [[https://getbootstrap.com/][bootstrap]]
- [[https://seiyria.com/bootstrap-slider][bootstrap-slider]]

* Development

#+begin_src elisp
(setq haskell-process-args-cabal-repl '("web-rep:exe:web-rep-example"))
#+end_src

#+RESULTS:
| web-rep:exe:web-rep-example |

#+begin_src haskell :results output :exports both
:r
:set prompt "> "
:set -Wno-type-defaults
:set -Wno-name-shadowing
:set -XOverloadedStrings
:set -XOverloadedLabels
:set -XDataKinds
import Prelude
import Box
import Web.Rep
import Optics.Core
import FlatParse.Basic
import MarkupParse
putStrLn "ok"
#+end_src

#+RESULTS:
: Ok, 11 modules loaded.
: ghci
: ok
